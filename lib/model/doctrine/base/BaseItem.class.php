<?php

/**
 * BaseItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property string $unit
 * @property string $description
 * @property Doctrine_Collection $Entry
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getCode()        Returns the current record's "code" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getUnit()        Returns the current record's "unit" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getEntry()       Returns the current record's "Entry" collection
 * @method Item                setId()          Sets the current record's "id" value
 * @method Item                setCode()        Sets the current record's "code" value
 * @method Item                setName()        Sets the current record's "name" value
 * @method Item                setUnit()        Sets the current record's "unit" value
 * @method Item                setDescription() Sets the current record's "description" value
 * @method Item                setEntry()       Sets the current record's "Entry" collection
 * 
 * @package    workbook
 * @subpackage model
 * @author     Florian Engler
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('item');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('code', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('unit', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Entry', array(
             'local' => 'id',
             'foreign' => 'item_id'));
    }
}